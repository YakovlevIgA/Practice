// Как известно, осенью и зимой светает поздно и так хочется утром ещё хоть немного поспать,
// а не идти в школу! Некоторые школьники готовы даже одеваться, не открывая глаз, лишь бы отложить момент пробуждения.
// Вот и Саша решил, что майку и носки он вполне может вытащить из шкафа на ощупь с закрытыми глазами и только потом включить свет и одеться.
// В шкафу у Саши есть два ящика. В одном из них лежит A синих и B красных маек, в другом — C синих и D красных пар носков.
// Саша хочет, чтобы и майка, и носки были одного цвета. Он вслепую вытаскивает M маек и N пар носков.
// В первое же утро Саша задумался, какое минимальное суммарное количество предметов одежды (M+N) он должен вытащить,
// чтобы среди них гарантированно оказались майка и носки одного цвета. Какого именно цвета окажутся предметы одежды, для Саши
// совершенно неважно

// На вход программе подаются четыре целых неотрицательных числа A, B, C, D, записанных в отдельных строках: A — количество синих маек,
// B — количество красных маек, C — количество синих носков, D — количество красных носков. Все числа не превосходят 10^9.
//  Гарантируется, что в шкафу есть одноцветный комплект из майки и носков.

// Программа должна вывести два числа: количество маек M и количество пар носков N, которые должен взять Саша. Необходимо, чтобы среди
// M маек и N пар носков обязательно нашлась одноцветная пара, при этом сумма M+N должна быть минимальной.

package main

import "fmt"

var A, B, C, D int

func findAns(A, B, C, D int) (int, int) {

	if A == 0 {
		M := 1
		N := C + 1
		return M, N
	}

	if B == 0 {
		M := 1
		N := D + 1
		return M, N
	}

	if C == 0 {
		M := A + 1
		N := 1
		return M, N
	}

	if D == 0 {
		M := B + 1
		N := 1
		return M, N
	}

	if A == 1 && C == 1 && D == 1 && B == 1 {
		M := 1
		N := 2
		return M, N
	}

	var M, N int

	min := 2 + A + C
	M = A + 1
	N = C + 1
	if min >= 2+B+D {
		min = 2 + B + D
		M = B + 1
		N = D + 1
	}

	switch { //
	case A >= B:
		if 2+A < M+N {
			M = A + 1
			N = 1
		}
	case B >= A:
		if 2+B < M+N {
			M = B + 1
			N = 1
		}
	}

	switch {
	case C >= D:
		if 2+C < M+N {
			M = 1
			N = C + 1
		}

	case D >= C:
		if 2+D < M+N {
			M = 1
			N = D + 1

		}

	}
	return M, N
}

func main() {

	fmt.Scan(&A, &B, &C, &D)
	fmt.Println(findAns(A, B, C, D))

}
